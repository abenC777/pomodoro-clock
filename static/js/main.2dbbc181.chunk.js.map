{"version":3,"sources":["components/Controls.js","components/Timer.js","components/Clock.js","components/App.js","index.js"],"names":["Controls","this","props","length","control","controlLabel","lengthLabel","decrementLabel","incrementLabel","onDecrement","onIncrement","className","id","onClick","Component","Timer","timeLeft","onStart","onReset","breakTime","timerLabel","timerStyle","color","style","Clock","state","started","prevTimerAvailable","session","break","onBreak","playBeep","audioBeep","currentTime","play","setTimeout","stopRewindBeep","pause","startSession","duration","minutes","seconds","myVar","prevTimer","timer","setInterval","parseInt","setState","clearInterval","Minutes","startBreak","myVarBreak","toggleTimer","resetTimer","handleDecrement","handleIncrement","componentDidMount","componentDidUpdate","prevProps","prevState","React","createRef","preload","ref","audio","src","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dbbc181.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Controls extends Component {\r\n  render() {\r\n    const {\r\n      length,\r\n      control,\r\n      controlLabel,\r\n      lengthLabel,\r\n      decrementLabel,\r\n      incrementLabel,\r\n      onDecrement,\r\n      onIncrement,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"control\">\r\n        <h2 className=\"control-label\" id={controlLabel}>\r\n          {control}\r\n        </h2>\r\n        <span\r\n          className=\"control-decrement arrow\"\r\n          id={decrementLabel}\r\n          onClick={() => onDecrement(decrementLabel)}\r\n        >\r\n          <i className=\"fas fa-arrow-down\"></i>\r\n        </span>\r\n        <span id={lengthLabel} className=\"control-length\">\r\n          {length}\r\n        </span>\r\n        <span\r\n          className=\"control-increment arrow\"\r\n          id={incrementLabel}\r\n          onClick={() => onIncrement(incrementLabel)}\r\n        >\r\n          <i className=\"fas fa-arrow-up\"></i>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Timer extends Component {\r\n  render() {\r\n    const { timeLeft, onStart, onReset, breakTime } = this.props;\r\n    const timerLabel = breakTime ? \"Break\" : \"Session\";\r\n    const timerStyle = breakTime ? { color: \"red\" } : { color: \"white\" };\r\n    return (\r\n      <>\r\n        <div className=\"timer\" style={timerStyle}>\r\n          <h2 id=\"timer-label\">{timerLabel}</h2>\r\n          <span id=\"time-left\" className=\"time-left\">\r\n            {timeLeft}\r\n          </span>\r\n        </div>\r\n        <div className=\"timer-controls\">\r\n          <div id=\"start_stop\" onClick={onStart}>\r\n            <i className=\"fas fa-play\"></i>\r\n            <i className=\"fas fa-pause\"></i>\r\n          </div>\r\n          <div id=\"reset\" onClick={onReset}>\r\n            <i className=\"fas fa-sync-alt\"></i>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Controls from \"./Controls\";\r\nimport Timer from \"./Timer\";\r\nimport \"./Clock.css\";\r\n\r\nexport default class Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioBeep = React.createRef();\r\n  }\r\n  state = {\r\n    started: false,\r\n    timeLeft: \"\",\r\n    prevTimerAvailable: \"\",\r\n    session: 25,\r\n    break: 5,\r\n    onBreak: false,\r\n  };\r\n\r\n  playBeep = () => {\r\n    this.audioBeep.currentTime = 0;\r\n    this.audioBeep.play();\r\n    setTimeout(() => {\r\n      this.stopRewindBeep();\r\n    }, 1000);\r\n  };\r\n\r\n  stopRewindBeep = () => {\r\n    this.audioBeep.pause();\r\n    this.audioBeep.currentTime = 0;\r\n  };\r\n\r\n  startSession = (duration) => {\r\n    let timer = duration,\r\n      minutes,\r\n      seconds,\r\n      myVar,\r\n      myTimer,\r\n      prevTimer;\r\n    // setting up func to use on interval to mimic timer mechanism\r\n    myTimer = () => {\r\n      minutes = parseInt(timer / 60, 10);\r\n      seconds = parseInt(timer % 60, 10);\r\n\r\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n      // if timer not started stop countdown, calculate time left on timer and save it on state for next toggle\r\n      if (!this.state.started) {\r\n        clearInterval(myVar);\r\n        prevTimer = minutes * 60 + seconds;\r\n        this.setState({ prevTimerAvailable: prevTimer });\r\n      } else {\r\n        // changes time left in state every second\r\n        this.setState({ timeLeft: minutes + \":\" + seconds });\r\n      }\r\n\r\n      // if timer reaches 0 the interval is stopped\r\n      if (--timer < 0) {\r\n        clearInterval(myVar);\r\n        this.setState({ onBreak: true });\r\n        this.playBeep();\r\n        const Minutes = 60 * this.state.break;\r\n        this.startBreak(Minutes);\r\n      }\r\n    };\r\n    myVar = setInterval(myTimer, 1000);\r\n  };\r\n\r\n  startBreak = (duration) => {\r\n    let timer = duration,\r\n      minutes,\r\n      seconds,\r\n      myVarBreak,\r\n      myTimerBreak,\r\n      prevTimer;\r\n    // setting up func to use on interval to mimic timer mechanism\r\n    myTimerBreak = () => {\r\n      minutes = parseInt(timer / 60, 10);\r\n      seconds = parseInt(timer % 60, 10);\r\n\r\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n      // if timer not started stop countdown, calculate time left on timer and save it on state for next toggle\r\n      if (!this.state.started) {\r\n        clearInterval(myVarBreak);\r\n        prevTimer = minutes * 60 + seconds;\r\n        this.setState({ prevTimerAvailable: prevTimer });\r\n      } else {\r\n        // changes time left in state every second\r\n        this.setState({ timeLeft: minutes + \":\" + seconds });\r\n      }\r\n\r\n      // if timer reaches 0 the interval is stopped\r\n      if (--timer < 0) {\r\n        clearInterval(myVarBreak);\r\n        this.setState({ onBreak: false });\r\n        const Minutes = 60 * this.state.session;\r\n        this.startSession(Minutes);\r\n      }\r\n    };\r\n    myVarBreak = setInterval(myTimerBreak, 1000);\r\n  };\r\n\r\n  toggleTimer = () => {\r\n    // if timer is not started and the time left is equal to the session we start the timer with the session value\r\n    if (!this.state.onBreak) {\r\n      if (!this.state.started) {\r\n        if (this.state.timeLeft === this.state.session + \":00\") {\r\n          this.setState({ started: true });\r\n          const Minutes = 60 * this.state.session - 1;\r\n\r\n          this.startSession(Minutes);\r\n        } else {\r\n          // if time left on timer is not equal to the session value we use the prev timer value to continue the timer\r\n          this.setState({ started: true });\r\n          const Minutes = this.state.prevTimerAvailable;\r\n\r\n          this.startSession(Minutes);\r\n        }\r\n      } else {\r\n        // if timer is started we simply stop the interval chaning started state\r\n        this.setState({ started: false });\r\n      }\r\n    } else {\r\n      if (!this.state.started) {\r\n        if (this.state.timeLeft === this.state.break + \":00\") {\r\n          this.setState({ started: true });\r\n          const Minutes = 60 * this.state.session - 1;\r\n\r\n          this.startBreak(Minutes);\r\n        } else {\r\n          // if time left on timer is not equal to the session value we use the prev timer value to continue the timer\r\n          this.setState({ started: true });\r\n          const Minutes = this.state.prevTimerAvailable;\r\n\r\n          this.startBreak(Minutes);\r\n        }\r\n      } else {\r\n        // if timer is started we simply stop the interval chaning started state\r\n        this.setState({ started: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.stopRewindBeep();\r\n    this.setState({\r\n      timeLeft: `${this.state.session}:00`,\r\n      started: false,\r\n      session: 25,\r\n      break: 5,\r\n      onBreak: false,\r\n    });\r\n  };\r\n\r\n  handleDecrement = (decrementLabel) => {\r\n    if (!this.state.started) {\r\n      if (decrementLabel === \"break-decrement\") {\r\n        if (this.state.break > 1) {\r\n          this.setState({ break: this.state.break - 1 });\r\n        }\r\n      } else {\r\n        if (this.state.session > 1) {\r\n          this.setState({\r\n            session: this.state.session - 1,\r\n            timeLeft: `${this.state.session}:00`,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleIncrement = (incrementLabel) => {\r\n    if (!this.state.started) {\r\n      if (incrementLabel === \"break-increment\") {\r\n        if (this.state.break < 60) {\r\n          this.setState({ break: this.state.break + 1 });\r\n        }\r\n      } else {\r\n        if (this.state.session < 60) {\r\n          this.setState({\r\n            session: this.state.session + 1,\r\n            timeLeft: `${this.state.session}:00`,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ timeLeft: `${this.state.session}:00` });\r\n  };\r\n\r\n  // so we change the value on timer on real time with the session control\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (prevState.session !== this.state.session) {\r\n      this.setState({ timeLeft: `${this.state.session}:00` });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clock\">\r\n        <h1>Pomodoros Clock</h1>\r\n        <div className=\"controls\">\r\n          <Controls\r\n            control=\"Break Length\"\r\n            length={this.state.break}\r\n            controlLabel=\"break-label\"\r\n            lengthLabel=\"break-length\"\r\n            decrementLabel=\"break-decrement\"\r\n            incrementLabel=\"break-increment\"\r\n            onDecrement={this.handleDecrement}\r\n            onIncrement={this.handleIncrement}\r\n          />\r\n          <Controls\r\n            control=\"Session Length\"\r\n            length={this.state.session}\r\n            controlLabel=\"session-label\"\r\n            lengthLabel=\"session-length\"\r\n            decrementLabel=\"session-decrement\"\r\n            incrementLabel=\"session-increment\"\r\n            onDecrement={this.handleDecrement}\r\n            onIncrement={this.handleIncrement}\r\n          />\r\n        </div>\r\n        <Timer\r\n          timeLeft={this.state.timeLeft}\r\n          onStart={this.toggleTimer}\r\n          onReset={this.resetTimer}\r\n          breakTime={this.state.onBreak}\r\n        />\r\n        <audio\r\n          id=\"beep\"\r\n          preload=\"metadata\"\r\n          ref={(audio) => {\r\n            this.audioBeep = audio;\r\n          }}\r\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Clock />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}